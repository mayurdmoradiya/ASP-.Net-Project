@model IEnumerable<ProjectTask>
@{
    ViewData["Title"] = "Tasks";
}

<div class="row mb-4">
    <div class="col">
        <h1 class="display-5 fw-bold">
            <i class="fas fa-list-check text-primary"></i> Tasks
        </h1>
        <p class="text-muted">Manage all your tasks</p>
    </div>
    <div class="col-auto">
        <a asp-action="Create" class="btn btn-primary btn-lg">
            <i class="fas fa-plus me-2"></i>New Task
        </a>
    </div>
</div>

@if (Model.Any())
{
    <!-- Task Status Tabs -->
    <ul class="nav nav-tabs mb-4" id="taskTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all" type="button">
                All (@Model.Count())
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="todo-tab" data-bs-toggle="tab" data-bs-target="#todo" type="button">
                To Do (@Model.Count(t => t.Status == TaskStatus.Todo))
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="inprogress-tab" data-bs-toggle="tab" data-bs-target="#inprogress" type="button">
                In Progress (@Model.Count(t => t.Status == TaskStatus.InProgress))
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="completed-tab" data-bs-toggle="tab" data-bs-target="#completed" type="button">
                Completed (@Model.Count(t => t.Status == TaskStatus.Completed))
            </button>
        </li>
    </ul>

    <div class="tab-content" id="taskTabsContent">
        <!-- All Tasks -->
        <div class="tab-pane fade show active" id="all" role="tabpanel">
            @await Html.PartialAsync("_TaskList", Model)
        </div>
        
        <!-- To Do Tasks -->
        <div class="tab-pane fade" id="todo" role="tabpanel">
            @await Html.PartialAsync("_TaskList", Model.Where(t => t.Status == TaskStatus.Todo))
        </div>
        
        <!-- In Progress Tasks -->
        <div class="tab-pane fade" id="inprogress" role="tabpanel">
            @await Html.PartialAsync("_TaskList", Model.Where(t => t.Status == TaskStatus.InProgress))
        </div>
        
        <!-- Completed Tasks -->
        <div class="tab-pane fade" id="completed" role="tabpanel">
            @await Html.PartialAsync("_TaskList", Model.Where(t => t.Status == TaskStatus.Completed))
        </div>
    </div>
}
else
{
    <div class="card">
        <div class="card-body text-center py-5">
            <i class="fas fa-tasks fa-4x text-muted mb-3"></i>
            <h3 class="text-muted">No Tasks Yet</h3>
            <p class="text-muted">Create your first task to get started</p>
            <a asp-action="Create" class="btn btn-primary btn-lg mt-3">
                <i class="fas fa-plus me-2"></i>Create Your First Task
            </a>
        </div>
    </div>
}
