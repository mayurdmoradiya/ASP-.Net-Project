@model IEnumerable<ProjectTask>

@if (Model.Any())
{
    <div class="row g-3">
        @foreach (var task in Model)
        {
            <div class="col-md-6 col-lg-4">
                <div class="card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title mb-0">@task.Title</h5>
                            <span class="badge 
                                @(task.Priority == TaskPriority.Critical ? "bg-danger" : 
                                  task.Priority == TaskPriority.High ? "bg-warning" : 
                                  task.Priority == TaskPriority.Medium ? "bg-info" : "bg-secondary")">
                                @task.Priority
                            </span>
                        </div>
                        
                        <p class="card-text text-muted small mb-3">
                            @(task.Description?.Length > 100 ? task.Description.Substring(0, 100) + "..." : task.Description)
                        </p>
                        
                        <div class="mb-3">
                            <span class="badge 
                                @(task.Status == TaskStatus.Completed ? "bg-success" : 
                                  task.Status == TaskStatus.InProgress ? "bg-info" : 
                                  task.Status == TaskStatus.Blocked ? "bg-danger" : 
                                  task.Status == TaskStatus.Review ? "bg-warning" : "bg-secondary")">
                                @task.Status
                            </span>
                        </div>
                        
                        <div class="mb-3">
                            <small class="text-muted">
                                <i class="fas fa-project-diagram me-1"></i>
                                @task.Project?.Name
                            </small>
                            <br />
                            @if (task.DueDate.HasValue)
                            {
                                <small class="text-muted">
                                    <i class="fas fa-calendar me-1"></i>
                                    Due: @task.DueDate.Value.ToString("MMM dd, yyyy")
                                </small>
                            }
                            @if (!string.IsNullOrEmpty(task.AssignedTo))
                            {
                                <br />
                                <small class="text-muted">
                                    <i class="fas fa-user me-1"></i>
                                    @task.AssignedTo
                                </small>
                            }
                        </div>
                        
                        <div class="d-flex gap-2">
                            <a asp-action="Edit" asp-route-id="@task.Id" class="btn btn-sm btn-outline-primary flex-fill">
                                <i class="fas fa-edit me-1"></i>Edit
                            </a>
                            <a asp-action="Delete" asp-route-id="@task.Id" class="btn btn-sm btn-outline-danger">
                                <i class="fas fa-trash"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="alert alert-info text-center">
        <i class="fas fa-info-circle me-2"></i>No tasks in this category
    </div>
}
